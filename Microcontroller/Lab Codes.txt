//Step Motor

#include<stdio.h>
#include<reg51.h>
char xdata port _at_ 0xe803;
char xdata porta _at_ 0xe800;
char idata acc _at_ 0x30;
void delay()
{
int j;
for(j = 0;j < 800; j++)
{}
}
void main()
{
port = 0x80;
while(1)
{
acc = 0x11;
porta = acc;
delay();
acc = 0x22;
porta = acc;
delay();
acc = 0x44;
porta = acc;
delay();
acc = 0x88;
porta = acc;
delay();
}
}

//Step motor 2

#include<stdio.h>
#include<reg51.h>

char xdata port _at_ 0xe803;
char xdata porta _at_ 0xe800;
char idata acc _at_ 0x30;

void delay(){
 int j;
 for(j=0;j<900;j++);
}

void main(){
 	port = 0x80;
	while(1){
	 	acc = 0x88;
		porta = acc;
		delay();
		acc = 0x44;
		porta = acc;
		delay();
		acc = 0x22;
		porta = acc;
		delay();
		acc = 0x11;
		porta = acc;
		delay();
	}
}

// Lab program 5
#include<stdio.h>
#include<reg51.h>

char xdata commW _at_ 0xe803;
char xdata portB _at_ 0xe801;
char xdata portC _at_ 0xe802;

void delay(){
 	int i=0;
	for(i=0;i<=8000;i++){
	}
}

void main(){
	char a[] = {0x80,0x88,0xAB,0x90,0x88,0xC7,0xA3,0xCE,0x86};
	int i,j,d;
	char k,m;
	commW = 0x80;
	while(1){
	 	i=8;
		for(d=0;d<10;d++){
		 	k = a[i--];
			for(j=0;j<8;j++){
			 	m=k;
				k=k&&0x80;
				if(k==00){
				 	portB=0x00;
				}else{
				 	portB=0x01;
				}
				portC = 0x01;//passing the contents from one 7-segment display to another
				portC = 0x00;
				k=m;
				k<<=1;
			}
			delay();
		}
		delay();
	}
}

//Lab program 5

#include<stdio.h>
#include<reg51.h>

char xdata CommandWord _at_ 0xe388;
char xdata PortA _at_ 0xe800;
char xdata PortB _at_ 0xe801;
char xdata  PresentFloor,RequestedFloor,step=0xF0;
long xdata count,i;

void delay(){
 	for(count=0;count<4500;count++);
}

void reset(){
 	 step = step&0x0f;
	 PortA = step;
	 step = step|0xf0;
	 PortA = step;
}

void Goup(){
 	switch(RequestedFloor){
	 	case 0x0d:
			while(step<0xF3){
			 	step++;
				PortA = step;
				delay();
			}
			reset();
			break;
		case 0x0b:
			while(step<0xF6){
			 	step++;
				PortA = step;
				delay();
			}
			reset();
			break;
		case 0x07:
			while(step<0xF9){
			 	step++;
				PortA = step;
				delay();
			}
			reset();
			break;
	}
}

void Godown(){
 	switch(RequestedFloor){
	 	case 0x0d:
			while(step>0xF3){
			 	step--;
				PortA = step;
				delay();
			}
			reset();
			break;
		case 0x0b:
			while(step>0xF6){
			 	step--;
				PortA = step;
				delay();
			}
			reset();
			break;
		case 0x0e:
			while(step>0xF0){
			 	step++;
				PortA = step;
				delay();
			}
			reset();
			break;
	}
}

void main(){
 	CommandWord = 0x82;
	PortA = 0xf0;
	PresentFloor = 0x0e;
	while(1){
	 	RequestedFloor = PortB;
		RequestedFloor = RequestedFloor&0x0f;
		if(RequestedFloor!=0x0f&&RequestedFloor!=PresentFloor){
		 	if(RequestedFloor<PresentFloor){
			 	Goup();
			}else{
			 	Godown();
			}
			PresentFloor = RequestedFloor;
		}
		RequestedFloor = PortB;

	}
}